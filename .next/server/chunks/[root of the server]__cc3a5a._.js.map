{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/Desktop/Nextgram/next-chat/src/app/api/livekit/route.ts"],"sourcesContent":["import { AccessToken } from 'livekit-server-sdk';\r\nimport { NextRequest, NextResponse } from 'next/server';\r\n\r\nexport async function GET(req: NextRequest) {\r\n  const room = req.nextUrl.searchParams.get('room');\r\n  const username = req.nextUrl.searchParams.get('username');\r\n  if (!room) {\r\n    return NextResponse.json(\r\n      { error: 'Missing \"room\" query parameter' },\r\n      { status: 400 }\r\n    );\r\n  } else if (!username) {\r\n    return NextResponse.json(\r\n      { error: 'Missing \"username\" query parameter' },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  const apiKey = process.env.LIVEKIT_API_KEY;\r\n  const apiSecret = process.env.LIVEKIT_API_SECRET;\r\n  const wsUrl = process.env.NEXT_PUBLIC_LIVEKIT_URL;\r\n\r\n  if (!apiKey || !apiSecret || !wsUrl) {\r\n    return NextResponse.json(\r\n      { error: 'Server misconfigured' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n\r\n  const at = new AccessToken(apiKey, apiSecret, { identity: username });\r\n\r\n  at.addGrant({ room, roomJoin: true, canPublish: true, canSubscribe: true });\r\n\r\n  return NextResponse.json({ token: await at.toJwt() });\r\n}"],"names":[],"mappings":";;;AAAA;AACA;AADA;;;AAGO,eAAe,IAAI,GAAgB;IACxC,MAAM,OAAO,IAAI,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC;IAC1C,MAAM,WAAW,IAAI,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC;IAC9C,IAAI,CAAC,MAAM;QACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAiC,GAC1C;YAAE,QAAQ;QAAI;IAElB,OAAO,IAAI,CAAC,UAAU;QACpB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAqC,GAC9C;YAAE,QAAQ;QAAI;IAElB;IAEA,MAAM,SAAS,QAAQ,GAAG,CAAC,eAAe;IAC1C,MAAM,YAAY,QAAQ,GAAG,CAAC,kBAAkB;IAChD,MAAM;IAEN,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,OAAO;QACnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAuB,GAChC;YAAE,QAAQ;QAAI;IAElB;IAEA,MAAM,KAAK,IAAI,iKAAA,CAAA,cAAW,CAAC,QAAQ,WAAW;QAAE,UAAU;IAAS;IAEnE,GAAG,QAAQ,CAAC;QAAE;QAAM,UAAU;QAAM,YAAY;QAAM,cAAc;IAAK;IAEzE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,OAAO,MAAM,GAAG,KAAK;IAAG;AACrD"}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}